@mixin transition($transition...) {
  @if $enable-transitions {
    @if length($transition) == 0 {
      transition: $transition-base;
    } @else {
      transition: $transition;
    }
  }
}
// stylelint-disable indentation
@mixin hover {
  // TODO: re-enable along with mq4-hover-shim
  //  @if $enable-hover-media-query {
  //    // See Media Queries Level 4: https://drafts.csswg.org/mediaqueries/#hover
  //    // Currently shimmed by https://github.com/twbs/mq4-hover-shim
  //    @media (hover: hover) {
  //      &:hover { @content }
  //    }
  //  }
  //  @else {
  &:hover {
    @content;
  }
  //  }
}

@mixin hover-focus {
  @if $enable-hover-media-query {
    &:focus {
      @content;
    }
    @include hover {
      @content;
    }
  } @else {
    &:focus,
    &:hover {
      @content;
    }
  }
}

@mixin plain-hover-focus {
  @if $enable-hover-media-query {
    &,
    &:focus {
      @content;
    }
    @include hover {
      @content;
    }
  } @else {
    &,
    &:focus,
    &:hover {
      @content;
    }
  }
}

@mixin hover-focus-active {
  @if $enable-hover-media-query {
    &:focus,
    &:active {
      @content;
    }
    @include hover {
      @content;
    }
  } @else {
    &:focus,
    &:active,
    &:hover {
      @content;
    }
  }
}
@mixin box-shadow($shadow...) {
  @if $enable-shadows {
    box-shadow: $shadow;
  }
}

@mixin box-shadow-custom($t, $r, $b, $l, $s-color) {
  @if $enable-shadows {
    box-shadow: $t $r $b $l $s-color;
  }
}

@mixin box-shadow-custom-inset($t1, $r1, $b1, $l1, $s-color1) {
  @if $enable-shadows {
    box-shadow: inset $t1, $r1, $b1, $l1, $s-color1;
  }
}

@mixin bs-light-off-axis-y($box-shadow-light-off-axis-y) {
  @if $enable-shadows {
    box-shadow: $box-shadow-light-off-axis-y;
  }
}
// Single side border-radius

@mixin border-radius($radius: $border-radius) {
  @if $enable-rounded {
    border-radius: $radius;
  }
}

@mixin border-top-radius($radius) {
  @if $enable-rounded {
    border-top-left-radius: $radius;
    border-top-right-radius: $radius;
  }
}

@mixin border-right-radius($radius) {
  @if $enable-rounded {
    border-top-right-radius: $radius;
    border-bottom-right-radius: $radius;
  }
}

@mixin border-bottom-radius($radius) {
  @if $enable-rounded {
    border-bottom-right-radius: $radius;
    border-bottom-left-radius: $radius;
  }
}

@mixin border-left-radius($radius) {
  @if $enable-rounded {
    border-top-left-radius: $radius;
    border-bottom-left-radius: $radius;
  }
}
// progress bar - fired on page load
@mixin animateWidth($startWidth, $endWidth) {
  @keyframes growHorizontal {
    from {
      width: $startWidth;
    }

    to {
      width: $endWidth;
    }
  }
}

@mixin animateWidth($startHeight, $endHeight) {
  @keyframes shrinkVerticle {
    from {
      height: $startHeight;
    }

    to {
      height: $endHeight;
    }
  }
}

//
@mixin animation($animate...) {
  $max: length($animate);
  $animations: "";

  @for $i from 1 through $max {
    $animations: #{$animations + nth($animate, $i)};

    @if $i < $max {
      $animations: #{$animations + ", "};
    }
  }
  animation: $animations;
}

@mixin keyframes($animationName) {
  @keyframes #{$animationName} {
    @content;
  }
}
